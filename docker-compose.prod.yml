version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend-api
    environment:
      - QDRANT_HOST=qdrant
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=amqp://admin:admin@rabbitmq:5672//
      - API_HOST=0.0.0.0
      - API_PORT=8000
    depends_on:
      - qdrant
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - app-network

  celery-worker:
    build: ./backend
    container_name: celery-worker
    command: celery -A app.core.celery_app worker --loglevel=info
    environment:
      - QDRANT_HOST=qdrant
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=amqp://admin:admin@rabbitmq:5672//
    depends_on:
      - backend
      - rabbitmq
    restart: unless-stopped
    networks:
      - app-network

  qdrant:
    image: qdrant/qdrant:v1.14.0
    container_name: qdrant-db
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq-broker
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: changeme123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  qdrant_data:
  redis_data:
  rabbitmq_data:
